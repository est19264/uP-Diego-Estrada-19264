$date
	Sun Nov 22 22:15:44 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench $end
$var wire 4 ! data_bus [3:0] $end
$var wire 1 " z_flag $end
$var wire 8 # program_byte [7:0] $end
$var wire 1 $ phase $end
$var wire 4 % oprnd [3:0] $end
$var wire 4 & instr [3:0] $end
$var wire 1 ' c_flag $end
$var wire 12 ( address_RAM [11:0] $end
$var wire 4 ) accu [3:0] $end
$var wire 12 * PC [11:0] $end
$var wire 4 + FF_out [3:0] $end
$var reg 1 , clock $end
$var reg 4 - pushbuttons [3:0] $end
$var reg 1 . reset $end
$var integer 32 / immediateDelay [31:0] $end
$var integer 32 0 jumpDelay [31:0] $end
$var integer 32 1 memoryDelay [31:0] $end
$scope module uPmodule $end
$var wire 1 , clock $end
$var wire 4 2 data_bus [3:0] $end
$var wire 4 3 pushbuttons [3:0] $end
$var wire 1 . reset $end
$var wire 1 " z_flag $end
$var wire 8 4 program_byte [7:0] $end
$var wire 1 $ phase $end
$var wire 4 5 oprnd [3:0] $end
$var wire 4 6 instr [3:0] $end
$var wire 1 ' c_flag $end
$var wire 12 7 address_RAM [11:0] $end
$var wire 4 8 accu [3:0] $end
$var wire 12 9 PC [11:0] $end
$var wire 13 : O_DEC [12:0] $end
$var wire 4 ; O_ALU [3:0] $end
$var wire 7 < I_DEC [6:0] $end
$var wire 4 = FF_out [3:0] $end
$var wire 1 > B $end
$var wire 1 ? A $end
$scope module ALU $end
$var wire 4 @ I2 [3:0] $end
$var wire 3 A com [2:0] $end
$var wire 1 ? zero $end
$var wire 4 B res [3:0] $end
$var wire 1 > carry $end
$var wire 4 C I1 [3:0] $end
$var reg 5 D regr [4:0] $end
$upscope $end
$scope module Accumulator $end
$var wire 1 E Enable $end
$var wire 4 F I [3:0] $end
$var wire 1 , clk $end
$var wire 1 . reset $end
$var wire 4 G O [3:0] $end
$scope module D1 $end
$var wire 2 H I2 [1:0] $end
$var wire 1 , clk $end
$var wire 1 E enabled $end
$var wire 1 . reset $end
$var wire 2 I O2 [1:0] $end
$scope module B1 $end
$var wire 1 E Enable $end
$var wire 1 J I1 $end
$var wire 1 , clk $end
$var wire 1 . reset $end
$var reg 1 K O1 $end
$upscope $end
$scope module B2 $end
$var wire 1 E Enable $end
$var wire 1 L I1 $end
$var wire 1 , clk $end
$var wire 1 . reset $end
$var reg 1 M O1 $end
$upscope $end
$upscope $end
$scope module D2 $end
$var wire 2 N I2 [1:0] $end
$var wire 1 , clk $end
$var wire 1 E enabled $end
$var wire 1 . reset $end
$var wire 2 O O2 [1:0] $end
$scope module B1 $end
$var wire 1 E Enable $end
$var wire 1 P I1 $end
$var wire 1 , clk $end
$var wire 1 . reset $end
$var reg 1 Q O1 $end
$upscope $end
$scope module B2 $end
$var wire 1 E Enable $end
$var wire 1 R I1 $end
$var wire 1 , clk $end
$var wire 1 . reset $end
$var reg 1 S O1 $end
$upscope $end
$upscope $end
$upscope $end
$scope module BALU $end
$var wire 1 T Enable $end
$var wire 4 U inputs [3:0] $end
$var wire 4 V outputs [3:0] $end
$upscope $end
$scope module BFetch $end
$var wire 1 W Enable $end
$var wire 4 X outputs [3:0] $end
$var wire 4 Y inputs [3:0] $end
$upscope $end
$scope module BIn $end
$var wire 1 Z Enable $end
$var wire 4 [ inputs [3:0] $end
$var wire 4 \ outputs [3:0] $end
$upscope $end
$scope module C_Flag $end
$var wire 1 ? D1 $end
$var wire 1 > D2 $end
$var wire 1 ] En $end
$var wire 1 , clock $end
$var wire 1 . reset $end
$var wire 1 " Ze $end
$var wire 1 ' C $end
$scope module S1 $end
$var wire 1 ] Enable $end
$var wire 1 ? I1 $end
$var wire 1 , clk $end
$var wire 1 . reset $end
$var reg 1 " O1 $end
$upscope $end
$scope module S2 $end
$var wire 1 ] Enable $end
$var wire 1 > I1 $end
$var wire 1 , clk $end
$var wire 1 . reset $end
$var reg 1 ' O1 $end
$upscope $end
$upscope $end
$scope module Decoder $end
$var wire 7 ^ I [6:0] $end
$var wire 13 _ R [12:0] $end
$var reg 13 ` O [12:0] $end
$upscope $end
$scope module Fetch $end
$var wire 1 a Enable2 $end
$var wire 1 , clk $end
$var wire 1 . reset $end
$var wire 4 b O2 [3:0] $end
$var wire 4 c O1 [3:0] $end
$var wire 8 d I [7:0] $end
$scope module C1 $end
$var wire 4 e I3 [3:0] $end
$var wire 1 , clk $end
$var wire 1 a enabled $end
$var wire 1 . reset $end
$var wire 4 f O3 [3:0] $end
$scope module C1 $end
$var wire 2 g I2 [1:0] $end
$var wire 1 , clk $end
$var wire 1 a enabled $end
$var wire 1 . reset $end
$var wire 2 h O2 [1:0] $end
$scope module B1 $end
$var wire 1 a Enable $end
$var wire 1 i I1 $end
$var wire 1 , clk $end
$var wire 1 . reset $end
$var reg 1 j O1 $end
$upscope $end
$scope module B2 $end
$var wire 1 a Enable $end
$var wire 1 k I1 $end
$var wire 1 , clk $end
$var wire 1 . reset $end
$var reg 1 l O1 $end
$upscope $end
$upscope $end
$scope module C2 $end
$var wire 2 m I2 [1:0] $end
$var wire 1 , clk $end
$var wire 1 a enabled $end
$var wire 1 . reset $end
$var wire 2 n O2 [1:0] $end
$scope module B1 $end
$var wire 1 a Enable $end
$var wire 1 o I1 $end
$var wire 1 , clk $end
$var wire 1 . reset $end
$var reg 1 p O1 $end
$upscope $end
$scope module B2 $end
$var wire 1 a Enable $end
$var wire 1 q I1 $end
$var wire 1 , clk $end
$var wire 1 . reset $end
$var reg 1 r O1 $end
$upscope $end
$upscope $end
$upscope $end
$scope module C2 $end
$var wire 4 s I3 [3:0] $end
$var wire 1 , clk $end
$var wire 1 a enabled $end
$var wire 1 . reset $end
$var wire 4 t O3 [3:0] $end
$scope module C1 $end
$var wire 2 u I2 [1:0] $end
$var wire 1 , clk $end
$var wire 1 a enabled $end
$var wire 1 . reset $end
$var wire 2 v O2 [1:0] $end
$scope module B1 $end
$var wire 1 a Enable $end
$var wire 1 w I1 $end
$var wire 1 , clk $end
$var wire 1 . reset $end
$var reg 1 x O1 $end
$upscope $end
$scope module B2 $end
$var wire 1 a Enable $end
$var wire 1 y I1 $end
$var wire 1 , clk $end
$var wire 1 . reset $end
$var reg 1 z O1 $end
$upscope $end
$upscope $end
$scope module C2 $end
$var wire 2 { I2 [1:0] $end
$var wire 1 , clk $end
$var wire 1 a enabled $end
$var wire 1 . reset $end
$var wire 2 | O2 [1:0] $end
$scope module B1 $end
$var wire 1 a Enable $end
$var wire 1 } I1 $end
$var wire 1 , clk $end
$var wire 1 . reset $end
$var reg 1 ~ O1 $end
$upscope $end
$scope module B2 $end
$var wire 1 a Enable $end
$var wire 1 !" I1 $end
$var wire 1 , clk $end
$var wire 1 . reset $end
$var reg 1 "" O1 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module OFFD4 $end
$var wire 4 #" I3 [3:0] $end
$var wire 1 , clk $end
$var wire 1 $" enabled $end
$var wire 1 . reset $end
$var wire 4 %" O3 [3:0] $end
$scope module C1 $end
$var wire 2 &" I2 [1:0] $end
$var wire 1 , clk $end
$var wire 1 $" enabled $end
$var wire 1 . reset $end
$var wire 2 '" O2 [1:0] $end
$scope module B1 $end
$var wire 1 $" Enable $end
$var wire 1 (" I1 $end
$var wire 1 , clk $end
$var wire 1 . reset $end
$var reg 1 )" O1 $end
$upscope $end
$scope module B2 $end
$var wire 1 $" Enable $end
$var wire 1 *" I1 $end
$var wire 1 , clk $end
$var wire 1 . reset $end
$var reg 1 +" O1 $end
$upscope $end
$upscope $end
$scope module C2 $end
$var wire 2 ," I2 [1:0] $end
$var wire 1 , clk $end
$var wire 1 $" enabled $end
$var wire 1 . reset $end
$var wire 2 -" O2 [1:0] $end
$scope module B1 $end
$var wire 1 $" Enable $end
$var wire 1 ." I1 $end
$var wire 1 , clk $end
$var wire 1 . reset $end
$var reg 1 /" O1 $end
$upscope $end
$scope module B2 $end
$var wire 1 $" Enable $end
$var wire 1 0" I1 $end
$var wire 1 , clk $end
$var wire 1 . reset $end
$var reg 1 1" O1 $end
$upscope $end
$upscope $end
$upscope $end
$scope module Phase $end
$var wire 1 , clk $end
$var wire 1 2" enabled $end
$var wire 1 . reset $end
$var wire 1 $ O1 $end
$scope module D1 $end
$var wire 1 2" Enable $end
$var wire 1 3" I1 $end
$var wire 1 , clk $end
$var wire 1 . reset $end
$var reg 1 $ O1 $end
$upscope $end
$upscope $end
$scope module Program_Counter $end
$var wire 1 4" Enable $end
$var wire 1 5" P $end
$var wire 1 , clk $end
$var wire 12 6" load [11:0] $end
$var wire 1 . reset $end
$var reg 12 7" exit [11:0] $end
$upscope $end
$scope module RAM $end
$var wire 1 8" Enable $end
$var wire 12 9" addres [11:0] $end
$var wire 4 :" data [3:0] $end
$var wire 1 ;" write $end
$var reg 4 <" dataout [3:0] $end
$upscope $end
$scope module ROM $end
$var wire 12 =" I [11:0] $end
$var wire 8 >" O [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx >"
bx ="
bx <"
x;"
bx :"
bx 9"
x8"
bx 7"
bx 6"
x5"
x4"
x3"
12"
x1"
x0"
x/"
x."
bx -"
bx ,"
x+"
x*"
x)"
x("
bx '"
bx &"
bx %"
x$"
bx #"
x""
x!"
x~
x}
bx |
bx {
xz
xy
xx
xw
bx v
bx u
bx t
bx s
xr
xq
xp
xo
bx n
bx m
xl
xk
xj
xi
bx h
bx g
bx f
bx e
bx d
bx c
bx b
xa
bx `
bx _
bx ^
x]
bx \
b110 [
xZ
bx Y
bx X
xW
bx V
bx U
xT
xS
xR
xQ
xP
bx O
bx N
xM
xL
xK
xJ
bx I
bx H
bx G
bx F
xE
bx D
bx C
bx B
bx A
bx @
x?
x>
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
b110 3
bx 2
b100010100 1
b1010010000 0
b10000 /
0.
b110 -
0,
bx +
bx *
bx )
bx (
x'
bx &
bx %
x$
bx #
x"
bx !
$end
#1
0("
0*"
0."
00"
b0 &"
b0 ,"
0J
0L
0P
0R
1?
b0 !
b0 2
b0 @
b0 V
b0 X
b0 \
b0 #"
b0 :"
1w
1y
1}
1!"
1i
0k
0o
0q
b0 H
b0 N
b11 u
b11 {
b1 g
b0 m
b0 ;
b0 B
b0 F
b0 U
0>
0]
0E
b0 A
1T
0Z
0W
0;"
08"
05"
14"
0$"
13"
1a
b1111 s
b100 e
b0 D
b1000000001000 :
b1000000001000 _
b1000000001000 `
0)"
b0 '"
0+"
0/"
b0 +
b0 =
b0 %"
b0 -"
01"
0$
b1001111 #
b1001111 4
b1001111 d
b1001111 >"
b0 *
b0 9
b0 7"
b0 ="
0j
b0 h
0l
0p
b0 &
b0 6
b0 c
b0 f
b0 n
0r
0x
b0 v
0z
0~
b1001111 (
b1001111 7
b1001111 6"
b1001111 9"
b0 %
b0 5
b0 Y
b0 b
b0 t
b0 |
0""
0K
b0 I
0M
0Q
b0 )
b0 8
b0 C
b0 G
b0 O
0S
0"
b0 <
b0 ^
0'
1.
1,
#2
0.
0,
#3
1J
1L
1P
1R
0?
b11 H
b11 N
b1111 ;
b1111 B
b1111 F
b1111 U
b1111 D
1]
1E
b10 A
1W
1("
1*"
1."
10"
b11 &"
b11 ,"
0w
0}
0i
1k
1q
b1111 !
b1111 2
b1111 @
b1111 V
b1111 X
b1111 \
b1111 #"
b1111 :"
b10 u
b10 {
b10 g
b10 m
0T
04"
b1010 s
b1010 e
03"
b11010000010 :
b11010000010 _
b11010000010 `
0a
1""
b11 |
1~
1z
b1111 %
b1111 5
b1111 Y
b1111 b
b1111 t
b11 v
1x
b100 &
b100 6
b100 c
b100 f
b1 h
1j
b111110101010 (
b111110101010 7
b111110101010 6"
b111110101010 9"
b10101010 #
b10101010 4
b10101010 d
b10101010 >"
b1 *
b1 9
b1 7"
b1 ="
b100001 <
b100001 ^
1$
1,
#4
0,
#5
1T
14"
1("
1*"
1."
10"
b11 &"
b11 ,"
b1111 !
b1111 2
b1111 @
b1111 V
b1111 X
b1111 \
b1111 #"
b1111 :"
0]
0E
b0 A
0W
13"
b1000000001000 :
b1000000001000 _
b1000000001000 `
1a
b100000 <
b100000 ^
0$
1K
b11 I
1M
1Q
b1111 )
b1111 8
b1111 C
b1111 G
b11 O
1S
1,
b101 -
b101 3
b101 [
#6
0,
#7
0J
0R
b10 H
b1 N
b1001 ;
b1001 B
b1001 F
b1001 U
1>
b11001 D
1]
1E
b11 A
1W
0("
1*"
0."
10"
b10 &"
b10 ,"
0y
0!"
1i
0k
1o
0q
b1010 !
b1010 2
b1010 @
b1010 V
b1010 X
b1010 \
b1010 #"
b1010 :"
b0 u
b0 {
b1 g
b1 m
0T
04"
b0 s
b101 e
03"
b11011000010 :
b11011000010 _
b11011000010 `
0a
b10 |
0~
b1010 %
b1010 5
b1010 Y
b1010 b
b1010 t
b10 v
0x
b10 n
1r
1l
b1010 &
b1010 6
b1010 c
b1010 f
b10 h
0j
b101001010000 (
b101001010000 7
b101001010000 6"
b101001010000 9"
b1010000 #
b1010000 4
b1010000 d
b1010000 >"
b10 *
b10 9
b10 7"
b10 ="
b1010001 <
b1010001 ^
1$
1,
#8
0,
b10 -
b10 3
b10 [
#9
1T
14"
0("
1*"
1."
00"
1L
0R
0>
b10 &"
b1 ,"
b10 H
b1 N
b1001 !
b1001 2
b1001 @
b1001 V
b1001 X
b1001 \
b1001 #"
b1001 :"
b1001 ;
b1001 B
b1001 F
b1001 U
0]
0E
b0 A
0W
13"
1a
b1001 D
b1000000001000 :
b1000000001000 _
b1000000001000 `
0$
b10 I
0K
b1001 )
b1001 8
b1001 C
b1001 G
b1 O
0S
b1010100 <
b1010100 ^
1'
1,
#10
0,
#11
1]
1E
b10 A
1Z
0("
1*"
1."
00"
b10 &"
b1 ,"
1q
b1001 !
b1001 2
b1001 @
b1001 V
b1001 X
b1001 \
b1001 #"
b1001 :"
b11 m
0T
04"
b111 e
03"
b11010000100 :
b11010000100 _
b11010000100 `
0a
b0 |
0""
b0 %
b0 5
b0 Y
b0 b
b0 t
b0 v
0z
0r
b1 n
1p
0l
b101 &
b101 6
b101 c
b101 f
b1 h
1j
b1110000 (
b1110000 7
b1110000 6"
b1110000 9"
b1110000 #
b1110000 4
b1110000 d
b1110000 >"
b11 *
b11 9
b11 7"
b11 ="
b101101 <
b101101 ^
1$
1,
b1001 -
b1001 3
b1001 [
#12
0,
#13
1T
14"
0("
1*"
1."
00"
b10 &"
b1 ,"
b1001 !
b1001 2
b1001 @
b1001 V
b1001 X
b1001 \
b1001 #"
b1001 :"
0]
0E
b0 A
0Z
13"
1a
b1000000001000 :
b1000000001000 _
b1000000001000 `
0$
b101000 <
b101000 ^
0'
1,
#14
0,
#15
1;"
18"
0("
1*"
1."
00"
b10 &"
b1 ,"
0i
0o
0q
b1001 !
b1001 2
b1001 @
b1001 V
b1001 X
b1001 \
b1001 #"
b1001 :"
b0 g
b0 m
1T
14"
b0 e
03"
b1000000111000 :
b1000000111000 _
b1000000111000 `
0a
b111 &
b111 6
b111 c
b111 f
b11 n
1r
b0 (
b0 7
b0 6"
b0 9"
b0 #
b0 4
b0 d
b0 >"
b100 *
b100 9
b100 7"
b100 ="
b111001 <
b111001 ^
1$
1,
#16
0,
#17
0("
1*"
1."
00"
b10 &"
b1 ,"
b1001 !
b1001 2
b1001 @
b1001 V
b1001 X
b1001 \
b1001 #"
b1001 :"
1}
1i
1q
1T
0;"
08"
14"
b1 {
b1 g
b10 m
13"
b1000000001000 :
b1000000001000 _
b1000000001000 `
1a
b1 s
b110 e
b111000 <
b111000 ^
0$
b1100001 (
b1100001 7
b1100001 6"
b1100001 9"
b1100001 #
b1100001 4
b1100001 d
b1100001 >"
b101 *
b101 9
b101 7"
b101 ="
1,
#18
0,
#19
x?
xJ
xL
xP
xR
bx H
bx N
bx ;
bx B
bx F
bx U
b0xxxx D
1]
1E
b10 A
18"
x("
x*"
x."
x0"
bx &"
bx ,"
0i
1o
0q
bx !
bx 2
bx @
bx V
bx X
bx \
bx #"
bx :"
b0 g
b1 m
0T
14"
b1 e
03"
b1011010100000 :
b1011010100000 _
b1011010100000 `
0a
b1 %
b1 5
b1 Y
b1 b
b1 t
b1 |
1~
b110 &
b110 6
b110 c
b110 f
b10 n
0p
b100010001 (
b100010001 7
b100010001 6"
b100010001 9"
b10001 #
b10001 4
b10001 d
b10001 >"
b110 *
b110 9
b110 7"
b110 ="
b110001 <
b110001 ^
1$
1,
#20
0,
#21
1T
x("
x*"
x."
x0"
bx &"
bx ,"
bx !
bx 2
bx @
bx V
bx X
bx \
bx #"
bx :"
0}
1!"
1i
0o
1q
b10 {
b1 g
b10 m
0]
0E
b0 A
08"
14"
13"
1a
b10 s
b110 e
b1000000001000 :
b1000000001000 _
b1000000001000 `
0$
b101100010 (
b101100010 7
b101100010 6"
b101100010 9"
b1100010 #
b1100010 4
b1100010 d
b1100010 >"
b111 *
b111 9
b111 7"
b111 ="
xK
bx I
xM
xQ
bx )
bx 8
bx C
bx G
bx O
xS
b1100x0 <
b1100x0 ^
x"
1,
#22
0,
#23
xJ
xL
xP
xR
bx H
bx N
bx ;
bx B
bx F
bx U
b0xxxx D
1]
1E
b10 A
18"
x("
x*"
x."
x0"
bx &"
bx ,"
0i
1o
bx !
bx 2
bx @
bx V
bx X
bx \
bx #"
bx :"
b0 g
b11 m
0T
14"
b11 e
03"
b1011010100000 :
b1011010100000 _
b1011010100000 `
0a
1""
b10 %
b10 5
b10 Y
b10 b
b10 t
b10 |
0~
b1000110010 (
b1000110010 7
b1000110010 6"
b1000110010 9"
b110010 #
b110010 4
b110010 d
b110010 >"
b1000 *
b1000 9
b1000 7"
b1000 ="
b1100x1 <
b1100x1 ^
1$
1,
#24
0,
#25
1T
x("
x*"
x."
x0"
bx &"
bx ,"
bx !
bx 2
bx @
bx V
bx X
bx \
bx #"
bx :"
0o
0]
0E
b0 A
08"
14"
b10 m
13"
b1000000001000 :
b1000000001000 _
b1000000001000 `
1a
b10 e
b1100x0 <
b1100x0 ^
0$
b1000100010 (
b1000100010 7
b1000100010 6"
b1000100010 9"
b100010 #
b100010 4
b100010 d
b100010 >"
b1001 *
b1001 9
b1001 7"
b1001 ="
1,
#26
0,
#27
x>
bx D
1]
b1 A
1W
0("
0*"
0."
10"
b0 &"
b10 ,"
1y
1i
1k
0q
b10 !
b10 2
b10 @
b10 V
b10 X
b10 \
b10 #"
b10 :"
b10 u
b11 g
b0 m
0T
04"
b1010 s
b1100 e
03"
b1001000010 :
b1001000010 _
b1001000010 `
0a
b10 &
b10 6
b10 c
b10 f
b0 h
0j
b1011001010 (
b1011001010 7
b1011001010 6"
b1011001010 9"
b11001010 #
b11001010 4
b11001010 d
b11001010 >"
b1010 *
b1010 9
b1010 7"
b1010 ="
b100x1 <
b100x1 ^
1$
1,
#28
0,
#29
1T
14"
x("
x*"
x."
x0"
0>
bx &"
bx ,"
b0xxxx D
bx !
bx 2
bx @
bx V
bx X
bx \
bx #"
bx :"
0]
b0 A
0W
13"
1a
b1000000001000 :
b1000000001000 _
b1000000001000 `
0$
b10xx0 <
b10xx0 ^
x'
1,
#30
0,
